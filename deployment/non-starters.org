These are "alternative deployment ideas" that we have briefly considered
but don't plan to implement.

* orchestrator as code generator - microservices
what if we could turn the orchestrator into a code generator?
use a Git Repository as it's only configuration store,
and use CI/CD to maintain configuration of the other services.

This would avoid a runtime orchestrator component.

Fun to think about
but unconvinced that its actually simpler or better in any way.

* orchestrator as code generator - nanoservices
Or use CI/CD to generate deployable compositions of features
from the other three component codebases,
i.e. discrete lambdas for every configuration workflow.

So runtime dependencies only on PaaS+lambda,
that embedds microservice features into workflows.

Not great because it prevents marketplace for services.
Delegation is a feature, innovation driven by
cometition between service implementationsis what we want.
This would break the market for ideas and improvement.
